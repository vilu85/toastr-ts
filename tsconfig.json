{
	"compilerOptions": {
		/* Projects */
		"composite": true,									/* Enable constraints that allow a TypeScript project to be used with project references. */
		/* Language and Environment */
		"target": "ES2020",									/* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
		"lib": [											/* Specify a set of bundled library declaration files that describe the target runtime environment. */
			"ES2020",
			"DOM",
			"DOM.Iterable"
		],
		"useDefineForClassFields": false,					/* Emit ECMAScript-standard-compliant class fields. */

		/* Modules */
		"module": "ESNext",									/* Specify what module code is generated. */
		"rootDir": "./src",									/* Specify the root directory of input files. */
		"moduleResolution": "node",							/* Specify how TypeScript looks up a file from a given module specifier. */
		"typeRoots": ["./node_modules/@types"],				/* Specify multiple folders that act like './node_modules/@types'. */
		"types": [											/* Specify type package names to be included without being referenced in a source file. */
			"jest"
		],
		"resolveJsonModule": true,							/* Enable importing .json files. */

		/* Emit */
		"declaration": true,								/* Generate .d.ts files from TypeScript and JavaScript files in your project. */
		"outDir": "./dist",									/* Specify an output folder for all emitted files. */
		"noEmit": false,									/* Disable emitting files from a compilation. */
		"declarationDir": "./types",						/* Specify the output directory for generated declaration files. */

		/* Interop Constraints */
		"isolatedModules": true,							/* Ensure that each file can be safely transpiled without relying on other imports. */
		"allowSyntheticDefaultImports": true,				/* Allow 'import x from y' when a module doesn't have a default export. */
		"esModuleInterop": true,							/* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
		"forceConsistentCasingInFileNames": true,			/* Ensure that casing is correct in imports. */

		/* Type Checking */
		"strict": true,										/* Enable all strict type-checking options. */
		"noImplicitAny": true,								/* Enable error reporting for expressions and declarations with an implied 'any' type. */
		"noUnusedLocals": true,								/* Enable error reporting when local variables aren't read. */
		"noUnusedParameters": true,							/* Raise an error when a function parameter isn't read. */
		"noFallthroughCasesInSwitch": true,					/* Enable error reporting for fallthrough cases in switch statements. */

		/* Completeness */
		"skipLibCheck": true 								/* Skip type checking all .d.ts files. */
	},
	"include": ["./src"],
	"exclude": ["./node_modules", "./dist", "./test"]
}
